# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "windninja" %}
{% set version = "3.10.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  url: https://github.com/firelab/windninja/archive/refs/tags/{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: 7ab120c7465afbe5e95e5eec32523a41ff010094c9b2db87cf9ac4b8eac1f956
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  # script: cmake . ${CMAKE_ARGS}   -DCMAKE_PREFIX_PATH:PATH=${PREFIX}   -DCMAKE_INSTALL_PREFIX:PATH=${PREFIX}   -DCMAKE_INSTALL_LIBDIR=lib   -DCMAKE_BUILD_TYPE=Release   -DNINJA_QTGUI=False   -DNINJAFOAM=False   -DCMAKE_CXX_STANDARD=11   -DOPENMP_SUPPORT=False   -DBUILD_FETCH_DEM=False   -DBUILD_STL_CONVERTER=False   -DBUILD_CONVERT_OUTPUT=False   -DBUILD_SOLAR_GRID=False && make install
  number: 0
  skip: true  # [win]

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx', 'fortran', among others
    - {{ compiler('cxx') }}
    # this is necessary for all compiled recipes
    - {{ stdlib('c') }}
    - cmake
    - make
  host:
    - libboost-devel
    - libgdal
    - libnetcdf


test:
  commands:
    - test -f ${PREFIX}/bin/WindNinja_cli


about:
  home: https://github.com/firelab/windninja
  summary: 'A diagnostic wind model developed for use in wildland fire modeling. '
  description: |
    WindNinja is a diagnostic wind model developed for use in wildland fire modeling.
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: MIT
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". 
  # Optional
  license_family: MIT
  license_file: LICENSE.txt


extra:
  recipe-maintainers:
    - Chrismarsh
    - nwagenbrenner
