context:
  name: streamlit-pydantic
  version: "0.6.0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/${{ name }}-${{ version }}.tar.gz
  sha256: d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f

build:
  script: python -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compiler names include 'c', 'cxx' and 'fortran', among others.
    - ${{ compiler('c') }}
    - ${{ stdlib('c') }}  # If you need any compiler, add the C standard library ("stdlib") too
  host:
    - python
    - pip
    - hatchling
    - hatch-vcs
  run:
    - python
    - streamlit
    - pydantic >=2.0
    - pydantic-extra-types >=2.6.0

tests:
  - python:
      imports:
      - streamlit_pydantic
      pip_check: true

about:
  homepage: https://github.com/lukasmasuch/streamlit-pydantic
  summary: ðŸª„ Auto-generate Streamlit UI from Pydantic Models and Dataclasses.
  description: |
    Streamlit-pydantic makes it easy to auto-generate UI elements from Pydantic models or dataclasses. Just define your data model and turn it into a full-fledged UI form. It supports data validation, nested models, and field limitations. Streamlit-pydantic can be easily integrated into any Streamlit app.
  license: MIT
  license_file: LICENSE
  repository: https://github.com/lukasmasuch/streamlit-pydantic

extra:
  recipe-maintainers:
    - pavelzw
