--- a/setup_support.py	2023-12-26 18:30:52.000000000 -0600
+++ b/setup_support.py	2023-12-27 10:58:18.225381852 -0600
@@ -62,10 +62,17 @@
     from cffi import FFI
 
     try:
+        pkg_config_path = []
+        if 'LIB_DIR' in os.environ:
+            pkg_config_path.append(os.environ['LIB_DIR'])
+            pkg_config_path.append(os.path.join(os.environ['LIB_DIR'], 'pkgconfig'))
+        env = dict(os.environ, PKG_CONFIG_PATH=':'.join(pkg_config_path))
         # raises CalledProcessError if pkg-config is not installed or the lib does not exists
-        subprocess.check_output(['pkg-config', '--exists', 'libsecp256k1'])  # noqa S603
+        print('Checking for libsecp256k1...')
+        subprocess.check_output(['pkg-config', '--exists', 'libsecp256k1'], env=env)  # noqa S603
+        print('   found')
 
-        includes = subprocess.check_output(['pkg-config', '--cflags-only-I', 'libsecp256k1'])  # noqa S603
+        includes = subprocess.check_output(['pkg-config', '--cflags-only-I', 'libsecp256k1'], env=env)  # noqa S603
         includes = includes.strip().decode('utf-8')
 
         return os.path.exists(os.path.join(includes[2:], 'secp256k1_ecdh.h'))
--- a/setup.py	2023-12-26 18:30:52.000000000 -0600
+++ b/setup.py	2023-12-27 14:46:24.864138037 -0600
@@ -281,6 +281,9 @@
     if os.name == 'nt' or sys.platform == 'win32':
         # Apparently, the linker on Windows interprets -lxxx as xxx.lib, not libxxx.lib
         for i, v in enumerate(extension.__dict__.get('extra_link_args')):
+            extension.__dict__['extra_link_args'][i] = v.replace('-L', '/LIBPATH:')
+            extension.__dict__['extra_link_args'][i] = v.replace('-l', '')
+
             if v.endswith('.lib'):
                 extension.__dict__['extra_link_args'][i] = f'lib{v}'
 
