{% set name = "conda-pypi" %}
{% set version = "0.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/conda_pypi-{{ version }}.tar.gz
  sha256: d5c4872ba7bde71262904d37c4cfc4e13175e102727eccc37d00e2970d5cb4dd

build:
  # can't be noarch because we can't place EXTERNALLY-MANAGED in stdlib (first level is site-packages)
  number: 0
  script:
    - set -x  # [unix]
    - "@ECHO ON"  # [win]
    - {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
    - {{ PYTHON }} -c "from conda_pypi.main import ensure_externally_managed; ensure_externally_managed()"

requirements:
  host:
    - python >=3.8
    - hatchling >=1.12.2
    - hatch-vcs >=0.2.0
    - pip
    # We need to execute some code during build time, so we need all runtime deps here too
    - conda >=23.9.0
    - grayskull
    - importlib_resources
    - packaging
  run:
    - python >=3.8
    - conda >=23.9.0
    - pip >=23.0.1
    - grayskull
    - importlib-resources
    - packaging

test:
  imports:
    - conda_pypi
    - conda_pypi.main
  commands:
    - pip check
    - conda pip --help
    - python -c "from conda_pypi.utils import get_env_stdlib; assert (get_env_stdlib() / 'EXTERNALLY-MANAGED').exists()"
    - pip install requests && exit 1 || exit 0

about:
  summary: Better PyPI interoperability for the conda ecosystem.
  license: MIT
  license_file: LICENSE
  home: https://github.com/conda-incubator/conda-pypi
  doc_url: https://conda-incubator.github.io/conda-pypi

extra:
  recipe-maintainers:
    - jaimergp
    - jezdez
