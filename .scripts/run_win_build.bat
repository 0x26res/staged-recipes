:: PLEASE NOTE: This script has been automatically generated by conda-smithy. Any changes here
:: will be lost next time ``conda smithy rerender`` is run. If you would like to make permanent
:: changes to this script, consider a proposal to conda-smithy so that other feedstocks can also
:: benefit from the improvement.

:: INPUTS (required environment variables)
:: CONDA_BLD_PATH: path for the conda-build workspace
:: CI: azure, or unset
:: MINIFORGE_HOME: where to install the base conda environment

setlocal enableextensions enabledelayedexpansion

call :start_group "Ensuring conda"

FOR %%A IN ("%~dp0.") DO SET "REPO_ROOT=%%~dpA"
if "%MINIFORGE_HOME%"=="" (
    set "MINIFORGE_HOME=%REPO_ROOT%\.pixi\envs\default"
) else (
    set "PIXI_CACHE_DIR=%MINIFORGE_HOME%"
)
:: Remove trailing backslash, if present
if "%MINIFORGE_HOME:~-1%"=="\" set "MINIFORGE_HOME=%MINIFORGE_HOME:~0,-1%"

WHERE /Q pixi && set "_install_pixi=no" || set "_install_pixi=yes"
if "%_install_pixi%"=="yes" (
    echo Installing pixi
    powershell -NoProfile -ExecutionPolicy unrestricted -Command "iwr -useb https://pixi.sh/install.ps1 | iex"
    if !errorlevel! neq 0 exit /b !errorlevel!
    set "PATH=%USERPROFILE%\.pixi\bin;%PATH%"
)

echo Creating environment
if "%PIXI_CACHE_DIR%"=="%MINIFORGE_HOME%" (
    mkdir "%MINIFORGE_HOME%"
    copy /Y pixi.toml "%MINIFORGE_HOME%"
    pushd "%MINIFORGE_HOME%"
) else (
    pushd "%REPO_ROOT%"
)
move /y pixi.toml pixi.toml.bak
set "arch=64"
if "%PROCESSOR_ARCHITECTURE%"=="ARM64" set "arch=arm64"
powershell -NoProfile -ExecutionPolicy unrestricted -Command "(Get-Content pixi.toml.bak -Encoding UTF8) -replace 'platforms = .*', 'platforms = [''win-%arch%'']' | Out-File -Encoding UTF8 pixi.toml"
pixi install
if !errorlevel! neq 0 exit /b !errorlevel!
echo Listing environment
pixi list
if !errorlevel! neq 0 exit /b !errorlevel!
:: Activate the base conda environment
echo Activating environment
set "ACTIVATE_PIXI=%TMP%\pixi-activate-%RANDOM%.bat"
pixi shell-hook > %ACTIVATE_PIXI%
if !errorlevel! neq 0 exit /b !errorlevel!
call %ACTIVATE_PIXI%
if !errorlevel! neq 0 exit /b !errorlevel!
move /y pixi.toml.bak pixi.toml
popd

call :end_group

call :start_group "Configuring conda"

if "%CONDA_BLD_PATH%" == "" (
    set "CONDA_BLD_PATH=C:\bld"
)

:: Set basic configuration
echo Setting up configuration
conda.exe config --set always_yes yes
if !errorlevel! neq 0 exit /b !errorlevel!
conda.exe config --set channel_priority strict
if !errorlevel! neq 0 exit /b !errorlevel!
conda.exe config --set solver libmamba
if !errorlevel! neq 0 exit /b !errorlevel!

setup_conda_rc .\ ".\recipes" .\.ci_support\%CONFIG%.yaml
if !errorlevel! neq 0 exit /b !errorlevel!

echo Run conda_forge_build_setup
call run_conda_forge_build_setup
if !errorlevel! neq 0 exit /b !errorlevel!

echo Force fetch origin/main
git fetch --force origin main:main
if !errorlevel! neq 0 exit /b !errorlevel!
echo Removing recipes also present in main
cd recipes
for /f "tokens=*" %%a in ('git ls-tree --name-only main -- .') do rmdir /s /q %%a && echo Removing recipe: %%a
cd ..

:: make sure there is a package directory so that artifact publishing works
if not exist "%CONDA_BLD_PATH%\win-64\" mkdir "%CONDA_BLD_PATH%\win-64\"
if not exist "%CONDA_BLD_PATH%\noarch\" mkdir "%CONDA_BLD_PATH%\noarch\"

echo Index %CONDA_BLD_PATH%
conda.exe index "%CONDA_BLD_PATH%"
if !errorlevel! neq 0 exit /b !errorlevel!

call :end_group

echo Building all recipes
python .ci_support\build_all.py --arch 64
if !errorlevel! neq 0 exit /b !errorlevel!

call :start_group "Inspecting artifacts"

:: inspect_artifacts was only added in conda-forge-ci-setup 4.6.0; --all-packages in 4.9.3
WHERE inspect_artifacts >nul 2>nul && inspect_artifacts --all-packages || echo "inspect_artifacts needs conda-forge-ci-setup >=4.9.3"

call :end_group

exit

:: Logging subroutines

:start_group
if /i "%CI%" == "github_actions" (
    echo ::group::%~1
    exit /b
)
if /i "%CI%" == "azure" (
    echo ##[group]%~1
    exit /b
)
echo %~1
exit /b

:end_group
if /i "%CI%" == "github_actions" (
    echo ::endgroup::
    exit /b
)
if /i "%CI%" == "azure" (
    echo ##[endgroup]
    exit /b
)
exit /b
