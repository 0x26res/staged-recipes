{% set name = "shell" %}
{% set version = "0.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: "https://github.com/prefix-dev/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz"
  sha256: "0eb58c974361144279e966b072bc69ab0b885090ca63a60bccab11c29ac44ba9"

build:
  number: 0
  ignore_run_exports_from:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - sysroot_linux-64  # [linux]
  script: |
    set -ex

    export PATH="$HOME/.cargo/bin:$PATH"
    export CARGO_TARGET_DIR="$SRC_DIR/target"

    cd crates/shell

    if [[ "$target_platform" == win-* ]]; then
      # Windows build
      cargo build --release
      mkdir -p "%PREFIX%\\bin"
      cp ../../target/release/shell.exe "${PREFIX}/bin/shell.exe"
    elif [[ "$target_platform" == linux-* ]]; then
      # Linux build
      export RUSTFLAGS="-C link-arg=-L${PREFIX}/lib \
                        -C link-arg=-Wl,-rpath,${PREFIX}/lib"
      cargo build --release
      install -Dm755 ../../target/release/shell "$PREFIX/bin/shell"
    elif [[ "$target_platform" == osx-* ]]; then
      # macOS build
      export RUSTFLAGS="-C link-arg=-L${PREFIX}/lib \
                        -C link-arg=-Wl,-rpath,${PREFIX}/lib"
      cargo build --release
      ls
      install -Dm755 ../../target/release/shell "$PREFIX/bin/shell"
    fi

requirements:
  host:
    - rust
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - sysroot_linux-64    # [linux]
  run:
    - sysroot_linux-64    # [linux]
    - libgcc              # [linux]
    - libgfortran
    - libiconv            # [osx]

test:
  commands:
    - shell --help        # [not win]
    - set PATH=%PREFIX%\bin;%PATH% && shell --help  # [win]

about:
  home: "https://github.com/prefix-dev/shell"
  license: "MIT"
  license_file: "LICENSE"
  summary: "Shell is a cross-platform shell utility written in Rust."

extra:
  recipe-maintainers:
    - prsabahrami
