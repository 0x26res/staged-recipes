{% set name = "tensorstore" %}
{% set version = "0.1.21" %}
# Bazel version is specified upstream, file .bazelversion
{% set bazel_version = "5.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/tensorstore-{{ version }}.tar.gz
  sha256: c620c3b06e1606092bd444bb7687c9d5a8049e8ed5f4c17ee0fd53e0a43b7df7
  patches:
    # Looks like they forgot to add update outputs in nasm and xz
    - patches/system_nasm.patch
    - patches/system_xz.patch
    # Can't use keyword arguments in ctx.template()
    - patches/repo_template.patch
    # we are using openssl instead of boringssl (Google's fork)
    # it mostly works out of the box, but we need to make sure the right symbol is used
    # we are commenting out an include that doesn't exist on openssl
    # and also replacing an old function name with its modern equivalent-ish (_cleanup->_reset)
    - patches/oauth-boringssl.patch
    # These two patches are FUN: we patch the workspace script from bazel
    # so it patches the half.hpp header it will download with our meta-patch :D
    # Idea for patch coming from # https://sourceforge.net/p/half/discussion/general/thread/86298c105c/
    - patches/net_sourceforge_half.patch
    - patches/half.hpp.patch.patch
    # Use conda-forge's pybind11
    - patches/pybind11-system-build.patch
    - patches/pybind11-workspace.patch
    # MacOS needs an extra linker flag so pybind11 finds the python symbols in _tensorstore.so :shrug:
    - patches/pybind11-linkopts.patch  # [osx]

build:
  skip: true  # [py<37 or win]
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python
    # Keep bazel listed twice here to help the migrators track dependencies
    - bazel
    - bazel {{ bazel_version }}
    - bazel-toolchain
  host:
    - pip
    - python
    - wheel
    - setuptools-scm
    - numpy
    - libprotobuf
    # we use openssl instead of boringssl, with some patches
    - openssl
    - brotli
    - bzip2
    - c-ares
    - blosc
    - libcurl
    - libjpeg-turbo
    - libpng
    - lz4
    - nasm
    - libnghttp2
    - snappy
    - xz
    - zlib
    - zstd
    # unvendored
    - pybind11
    - pybind11-abi
  run:
    - {{ pin_compatible('numpy') }}
    - python
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]

test:
  imports:
    - tensorstore
  commands:
    - pip list
    - pip check
  requires:
    - pip

about:
  home: https://github.com/google/tensorstore
  summary: Read and write large, multi-dimensional arrays
  license: Apache-2.0
  license_file: LICENSE

extra:
  recipe-maintainers:
    - goanpeca
    - jaimergp
