{% set version = '1.0.0-rc1' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppplanc
  version: {{ version|replace("-", "_") }}


source:
  url: https://github.com/welch-lab/RcppPlanc/archive/refs/tags/{{ version }}.tar.gz
  sha256: ebed08b3c6896a4fd74766ec260a46ced3113cc9a6023b5d77e4a7dd8a7bec4d

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  string: {{ blas_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: knitr, withr, rmarkdown, testthat (>= 3.0.0)
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}git
    - {{ posix }}zip               # [win]
    - sysroot_linux-64  2.17  # [linux64]
    - cmake >=3.22
    - make
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - pkg-config
    - diffutils  # [not win]
    - m2-diffutils  # [win]
    - patch  # [not win]
    - m2-patch  # [win]

  host:
    - r-base
    - r-matrix
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppprogress
    - libhwloc >=2.0.0,<3.0.0
    - hdf5 >=1.10
    - mkl-devel {{ mkl }}   # [blas_impl == "mkl"]
    - libcblas * *_mkl      # [blas_impl == "mkl"]
    - libcblas              # [blas_impl != "mkl"]
    - liblapack             # [blas_impl != "mkl"]
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-matrix
    - r-rcpp
    - r-rcpparmadillo
    - r-rcppprogress
    - nomkl                 # [blas_impl != "mkl"]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('RcppPlanc')"           # [not win]
    - "\"%R%\" -e \"library('RcppPlanc')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://github.com/welch-lab/rcppplanc
  license: GPL-2.0-or-later
  summary: '''Rcpp'' bindings for ''PLANC'', a highly parallel and extensible NMF/NTF  (Non-negative
    Matrix/Tensor Factorization) library. Wraps algorithms described in Kannan et. al
    (2018) <doi:10.1109/TKDE.2017.2767592> and Eswar et. al (2021) <doi:10.1145/3432185>.
    Implements algorithms described in Welch et al. (2019) <doi:10.1016/j.cell.2019.05.006>,
    Gao et al. (2021) <doi:10.1038/s41587-021-00867-x>, and Kriebel & Welch (2022) <doi:10.1038/s41467-022-28431-4>.'
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - theAeon

# The original CRAN metadata for this package was:

# Package: RcppPlanc
# Type: Package
# Title: Parallel Low-Rank Approximation with Nonnegativity Constraints
# Version: 1.0.0
# Date: 2024-01-08
# Authors@R: c( person(given = 'Andrew', family = 'Robbins', email = 'robbiand@umich.edu', role = c('aut', 'cre')), person(given = 'Yichen', family = 'Wang', email = 'wayichen@umich.edu', role = c('aut')), person(given = 'Joshua', family = 'Welch', role = c('cph')), person(given = 'Ramakrishnan', family = 'Kannan', role = c('cph'), comment = "The original PLANC code"), person("UT-Batelle", role = c('cph'), comment = "The original PLANC code"))
# Maintainer: Andrew Robbins <robbiand@umich.edu>
# Description: 'Rcpp' bindings for 'PLANC', a highly parallel and extensible NMF/NTF  (Non-negative Matrix/Tensor Factorization) library. Wraps algorithms described in Kannan et. al (2018) <doi:10.1109/TKDE.2017.2767592> and Eswar et. al (2021) <doi:10.1145/3432185>. Implements algorithms described in Welch et al. (2019) <doi:10.1016/j.cell.2019.05.006>, Gao et al. (2021) <doi:10.1038/s41587-021-00867-x>, and Kriebel & Welch (2022) <doi:10.1038/s41467-022-28431-4>.
# Encoding: UTF-8
# Imports: methods, Rcpp, Matrix
# Suggests: knitr, withr, rmarkdown, testthat (>= 3.0.0)
# LinkingTo: Rcpp, RcppArmadillo, RcppProgress
# License: GPL (>= 2)
# RoxygenNote: 7.2.3
# SystemRequirements: C++17, cmake >= 3.16.0, hdf5, git, v8, gnumake, hwloc, GNU make
# Config/testthat/edition: 3
# Depends: R (>= 2.10)
# LazyData: true
# VignetteBuilder: knitr

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
