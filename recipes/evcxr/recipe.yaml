context:
  name: evcxr
  version: "0.17.0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/${{ name }}/${{ name }}/archive/refs/tags/v${{ version }}.tar.gz
  sha256: 372cee9626d547409d8482116a04a5d59db84ad2faf59468f55e141d21785cd5

build:
  number: 0
  script:
    content:
    - if: unix
      then: |
        cargo install --locked --root "${PREFIX}" --no-track evcxr_repl
        cargo install --locked --root "${PREFIX}" --no-track evcxr_jupyter
        export JUPYTER_PATH="${PREFIX}/share/jupyter/"
        "${PREFIX}/bin/evcxr_jupyter" --install
        cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
      else: |
        cargo install --locked --root "%LIBRARY_BIN%" --no-track evcxr_repl
        if errorlevel 1 exit
        cargo install --locked --root "%LIBRARY_BIN%" --no-track evcxr_jupyter
        if errorlevel 1 exit
        set JUPYTER_PATH="%PREFIX%\\share\\jupyter"
        if errorlevel 1 exit
        %LIBRARY_BIN%\\evcxr_jupyter.exe --install
        if errorlevel 1 exit
        cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
        if errorlevel 1 exit

requirements:
  build:
    - ${{ compiler("rust") }}
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - cargo-bundle-licenses
  run:
    - rust
    - rust-src

tests:
  - package_contents:
      bin:
        - if: unix
          then: evcxr
          else: evcxr.exe
        - if: unix
          then: evcxr_jupyter
          else: evcxr_jupyter.exe
      files:
        - share/jupyter/kernels/rust/kernel.json
  - script:
    - evcxr --help
    - if: unix
      then: echo '7 + 6' | evcxr | grep 13
      else: echo 7 + 6 | evcxr | findstr "13"
    - evcxr_jupyter --help


about:
  homepage: https://github.com/evcxr/evcxr
  summary: An evaluation context for Rust
  description: |
    An evaluation context for Rust.
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  documentation: https://github.com/evcxr/evcxr/blob/main/COMMON.md
  repository: https://github.com/evcxr/evcxr

extra:
  recipe-maintainers:
    - AntoinePrv
