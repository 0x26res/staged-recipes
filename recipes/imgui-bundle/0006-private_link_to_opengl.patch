diff --git a/bindings/imgui_bundle/demos_cpp/demos_immapp/CMakeLists.txt b/bindings/imgui_bundle/demos_cpp/demos_immapp/CMakeLists.txt
index 16358f94..a17f4c99 100644
--- a/bindings/imgui_bundle/demos_cpp/demos_immapp/CMakeLists.txt
+++ b/bindings/imgui_bundle/demos_cpp/demos_immapp/CMakeLists.txt
@@ -4,7 +4,7 @@ if(EMSCRIPTEN)
 else()
     if (UNIX OR (APPLE AND NOT IOS))
         find_package(OpenGL REQUIRED)
-        target_link_libraries(imgui_example_glfw_opengl3 PUBLIC OpenGL::GL)
+        target_link_libraries(imgui_example_glfw_opengl3 PRIVATE OpenGL::GL)
     endif()
 endif()
 
Submodule external/hello_imgui/hello_imgui contains modified content
diff --git a/external/hello_imgui/hello_imgui/hello_imgui_cmake/hello_imgui_build_lib.cmake b/external/hello_imgui/hello_imgui/hello_imgui_cmake/hello_imgui_build_lib.cmake
index 923da1b..6e8a02d 100644
--- a/external/hello_imgui/hello_imgui/hello_imgui_cmake/hello_imgui_build_lib.cmake
+++ b/external/hello_imgui/hello_imgui/hello_imgui_cmake/hello_imgui_build_lib.cmake
@@ -280,10 +280,11 @@ function(him_build_imgui)
             _him_do_build_imgui()
         endif()
         if (HELLOIMGUI_USE_FREETYPE)
-            _him_add_freetype_to_imgui()
-            if (HELLOIMGUI_USE_FREETYPE_PLUTOSVG)
-                _him_add_freetype_plutosvg_to_imgui()
-            endif()
+            find_package(Freetype REQUIRED)
+            target_link_libraries(imgui PRIVATE ${FREETYPE_LIBRARIES})
+            target_include_directories(imgui PRIVATE ${FREETYPE_INCLUDE_DIRS})
+            find_library(PLUTOVG_LIBRARIES plutovg REQUIRED)
+            target_link_libraries(imgui PRIVATE ${PLUTOVG_LIBRARIES})
         endif()
     endif()
 endfunction()
@@ -805,9 +806,9 @@ function(_him_add_glad)
     target_include_directories(glad PUBLIC $<BUILD_INTERFACE:${glad_dir}/include>)
 
     if(WIN32)
-        target_link_libraries(glad PUBLIC opengl32.lib)
+        target_link_libraries(glad PRIVATE opengl32.lib)
     else()
-        target_link_libraries(glad PUBLIC ${OPENGL_LIBRARIES})
+        target_link_libraries(glad PRIVATE ${OPENGL_LIBRARIES})
     endif()
     get_target_property(library_type glad TYPE)
     target_compile_definitions(glad PUBLIC HELLOIMGUI_USE_GLAD)
@@ -818,7 +819,7 @@ function(_him_add_glad)
     endif()
 
     hello_imgui_msvc_target_set_folder(glad ${HELLOIMGUI_SOLUTIONFOLDER}/external/OpenGL_Loaders)
-    target_link_libraries(${HELLOIMGUI_TARGET} PUBLIC glad)
+    target_link_libraries(${HELLOIMGUI_TARGET} PRIVATE glad)
 
     him_add_installable_dependency(glad)
     if(HELLOIMGUI_INSTALL)
Submodule external/imgui-node-editor/imgui-node-editor contains modified content
diff --git a/external/imgui-node-editor/imgui-node-editor/examples/cmake/Findimgui.cmake b/external/imgui-node-editor/imgui-node-editor/examples/cmake/Findimgui.cmake
index f764f88..71bb95c 100644
--- a/external/imgui-node-editor/imgui-node-editor/examples/cmake/Findimgui.cmake
+++ b/external/imgui-node-editor/imgui-node-editor/examples/cmake/Findimgui.cmake
@@ -55,13 +55,13 @@ foreach(component ${imgui_FIND_COMPONENTS})
     target_link_libraries(imgui_${component} PUBLIC imgui)
 
     if (component MATCHES "dx11")
-        target_link_libraries(imgui_${component} PUBLIC d3d11)
+        target_link_libraries(imgui_${component} PRIVATE d3d11)
     elseif (component MATCHES "opengl*")
         find_package(OpenGL REQUIRED COMPONENTS OpenGL)
-        target_link_libraries(imgui_${component} PUBLIC OpenGL::GL)
+        target_link_libraries(imgui_${component} PRIVATE OpenGL::GL)
     elseif(component STREQUAL "glfw")
         find_package(glfw REQUIRED)
-        target_link_libraries(imgui_${component} PUBLIC glfw)
+        target_link_libraries(imgui_${component} PRIVATE glfw)
     endif()
 
     add_library(imgui::${component} ALIAS imgui_${component})
Submodule external/immvision/immvision contains modified content
diff --git a/external/immvision/immvision/src/immvision_gl_loader/CMakeLists.txt b/external/immvision/immvision/src/immvision_gl_loader/CMakeLists.txt
index 14df249..5244f00 100644
--- a/external/immvision/immvision/src/immvision_gl_loader/CMakeLists.txt
+++ b/external/immvision/immvision/src/immvision_gl_loader/CMakeLists.txt
@@ -28,11 +28,11 @@ target_include_directories(immvision_gl_loader PUBLIC $<BUILD_INTERFACE:${CMAKE_
 
 if (NOT EMSCRIPTEN)
     find_package(OpenGL REQUIRED)
-    target_link_libraries(immvision_gl_loader PUBLIC OpenGL::GL)
+    target_link_libraries(immvision_gl_loader PRIVATE OpenGL::GL)
 endif()
 
 if (IMMVISION_USE_GLAD)
-    target_link_libraries(immvision_gl_loader PUBLIC glad_imm)
+    target_link_libraries(immvision_gl_loader PRIVATE glad_imm)
     target_compile_definitions(immvision_gl_loader PUBLIC IMMVISION_USE_GLAD)
 elseif(IMMVISION_USE_GLES3)
     target_compile_definitions(immvision_gl_loader PUBLIC IMMVISION_USE_GLES3)
diff --git a/imgui_bundle_cmake/internal/add_imgui_bundle_bindings.cmake b/imgui_bundle_cmake/internal/add_imgui_bundle_bindings.cmake
index 312e2bf4..24e605cf 100644
--- a/imgui_bundle_cmake/internal/add_imgui_bundle_bindings.cmake
+++ b/imgui_bundle_cmake/internal/add_imgui_bundle_bindings.cmake
@@ -85,7 +85,7 @@ function(add_imgui_bundle_bindings)
     # Link with OpenGL (necessary for nanobind)
     if (NOT  EMSCRIPTEN)
         find_package(OpenGL REQUIRED)
-        target_link_libraries(${python_native_module_name} PUBLIC OpenGL::GL)
+        target_link_libraries(${python_native_module_name} PRIVATE OpenGL::GL)
     endif()
 
     # Disable optimizations on release build for msvc

