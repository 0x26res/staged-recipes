context:
  name: arguably
  version: "1.3.0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/a/arguably/arguably-${{ version }}.tar.gz
  sha256: 9261e49d0281600e9eac3fb2e31d2022dc0d002b6370461d787b20690eb2a98d

build:
  noarch: python
  script: python -m pip install . -vv
  number: 0

requirements:
  host:
    - python ${{ python_min }}.*
    - pip
    - poetry-core
  run:
    - python >=${{ python_min }}
    - docstring-parser >=0.16.0

tests:
  - python:
      imports:
      - arguably
      pip_check: true
      python_version: ${{ python_min }}.*

about:
  homepage: https://treykeown.github.io/arguably/
  summary: 'The best Python CLI library, arguably.'
  description: |
    arguably turns functions and docstrings into command line interfaces (CLIs).
    arguably has a tiny API and is extremely easy to integrate.
    You can also use it directly through python3 -m arguably your_script.py, more on that here.

    To use arguably in a script, decorate any functions that should appear on the command line with @arguably.command, then call arguably.run().
    If multiple functions are decorated, they'll all appear as subcommands.
    You can even have multiple levels of subcommands: def s3__ls() becomes s3 ls.
  license: MIT
  license_file: LICENSE.txt
  repository: https://github.com/treykeown/arguably

extra:
  recipe-maintainers:
    - claudiushaag
