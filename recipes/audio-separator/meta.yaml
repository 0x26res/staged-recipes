{% set name = "audio-separator" %}
{% set version = "0.10.4" %}

{% set cuda_enabled = False %}
{% set cuda_enabled = cuda_compiler_version != "None" %}  # [linux64]
{% set build_ext = "cuda" if cuda_enabled else "cpu" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/audio_separator-{{ version }}.tar.gz
  sha256: 7b454a48a02a61b3be6c345a54e37ccc7a72bf8e70ef5f7d1a7503d4e0e411c2

build:
  number: 0
  string: {{ build_ext }}
  entry_points:
    - audio-separator = audio_separator.utils.cli:main
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: True  # [win]

requirements:
  build:
    # this adds matching cuda requirement to pytorch using __cuda package
    - {{ compiler('cuda') }}  # [linux64 and cuda_compiler_version != "None"]
  host:
    - python >=3.9
    - poetry-core
    - pip
  run:
    - python >=3.9
    - requests >=2
    - numpy >=1.23
    - librosa >=0.9
    - six >=1.16
    - pydub >=0.25
    - onnx >=1.14
    - pytorch
    - onnxruntime =*=*{{ build_ext }}

test:
  imports:
    - audio_separator
  commands:
    - pip check
    - audio-separator --help
  requires:
    - pip

about:
  home: https://github.com/karaokenerds/python-audio-separator
  summary: Easy to use vocal separation on CLI or as a python package, using the amazing MDX-Net models from UVR trained by @Anjok07
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - beveradb
