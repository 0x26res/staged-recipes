--- gethost.c	2024-03-03 18:58:10.000000000 +0000
+++ gethost.c	2024-03-03 18:58:10.000000000 +0000
@@ -31,6 +31,7 @@
 
 #ifdef WIN32
 #include <X11/Xwinsock.h>
+#include <stdint.h>
 #define EPROTOTYPE WSAEPROTOTYPE
 #endif
 #include <X11/X.h>
@@ -193,14 +194,14 @@
            strncpy(path, fulldpyname, sizeof(path) - 1);
            path[sizeof(path) - 1] = '\0';
 #endif
-           if (0 == stat(path, &sbuf) && S_ISSOCK(sbuf.st_mode) ) {
+           if (0 == stat(path, &sbuf)) {
                is_path_to_socket = 1;
            } else {
                char *dot = strrchr(path, '.');
                if (dot) {
                    *dot = '\0';
                    /* screen = atoi(dot + 1); */
-                   if (0 == stat(path, &sbuf) && S_ISSOCK(sbuf.st_mode)) {
+                   if (0 == stat(path, &sbuf)) {
                        is_path_to_socket = 1;
                    }
                }
@@ -250,7 +251,7 @@
            if (ai->ai_family == AF_INET) {
                struct sockaddr_in *sin = (struct sockaddr_in *)ai->ai_addr;
                src = &(sin->sin_addr);
-                if (*(const in_addr_t *) src == htonl(INADDR_LOOPBACK)) {
+                if (*(const uint32_t *) src == htonl(INADDR_LOOPBACK)) {
                     family = FamilyLocal;
                     if (get_local_hostname (buf, sizeof buf)) {
                         src = buf;
@@ -320,7 +321,7 @@
 #else
        if (!get_inet_address (host, &hostinetaddr)) return NULL;
        src = (char *) &hostinetaddr;
-        if (*(const in_addr_t *) src == htonl(INADDR_LOOPBACK)) {
+        if (*(const uint32_t *) src == htonl(INADDR_LOOPBACK)) {
             family = FamilyLocal;
             if (get_local_hostname (buf, sizeof buf)) {
                 src = buf;
--- parsedpy.c	2024-03-03 18:58:10.000000000 +0000
+++ parsedpy.c	2024-03-03 18:58:10.000000000 +0000
@@ -172,14 +172,14 @@
         strncpy(path, displayname, sizeof(path) - 1);
         path[sizeof(path) - 1] = '\0';
 #endif
-        if (0 == stat(path, &sbuf) && S_ISSOCK(sbuf.st_mode)) {
+        if (0 == stat(path, &sbuf)) {
             family = FamilyLocal;
         } else {
             char *dot = strrchr(path, '.');
             if (dot) {
                 *dot = '\0';
                 /* screen = atoi(dot + 1); */
-                if (0 == stat(path, &sbuf) && S_ISSOCK(sbuf.st_mode)) {
+                if (0 == stat(path, &sbuf)) {
                     family = FamilyLocal;
                 }
             }
