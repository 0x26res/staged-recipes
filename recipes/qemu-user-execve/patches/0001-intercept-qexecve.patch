This patch is extracted from Joel Holdsworth's patch submission.
    https://patchwork.kernel.org/project/qemu-devel/list/?series=&submitter=168401&state=*&q=&archive=both&delegate=

Itself, is based on the original work by Petros Angelatos [1], which
I have updated to the current git master. The following commit message
is largely based on Petros' original message.

In order for one to use QEMU user mode emulation under a chroot, it is
required to use binfmt_misc. This can be avoided by QEMU never doing a
raw execve() to the host system.

Introduce a new option, --execve, that uses the current QEMU interpreter
to intercept execve().

qemu_execve() will prepend the interpreter path, similar to what
binfmt_misc would do, and then pass the modified execve() to the host.

--- qemu/linux-user/main.c
+++ qemu/linux-user/main.c
@@ -128,2 +128,3 @@
 const char *qemu_uname_release;
+const char *qemu_execve_path;

@@ -378,2 +379,7 @@

+static void handle_arg_execve(const char *arg)
+{
+    qemu_execve_path = strdup(arg);
+}
+
 static void handle_arg_reserved_va(const char *arg)
@@ -494,2 +500,4 @@
      "address",    "set guest_base address to 'address'"},
+    {"execve",     "QEMU_EXECVE",      true,   handle_arg_execve,
+     "path",       "use interpreter at 'path' when a process calls execve()"},
     {"R",          "QEMU_RESERVED_VA", true,  handle_arg_reserved_va,
--- qemu/linux-user/user-internals.h
+++ qemu/linux-user/user-internals.h
@@ -30,2 +30,3 @@
 extern const char *qemu_uname_release;
+extern const char *qemu_execve_path;
 extern unsigned long mmap_min_addr;
