{% set version = "24.7.0" %}

package:
  name: libnvpl-split
  version: {{ version }}

build:
  number: 0
  noarch: generic

# Having this date versioned package in an environment will pin all of the
# binaries exactly because the dev packages pin to their sonamed packages
# exactly
outputs:

  - name: _nvpl_dev_mutex
    requirements:
      run_constrained:
        - libnvpl-blas-dev 0.3.0
        - libnvpl-common-dev 0.3.0
        - libnvpl-fft-dev 0.3.0
        - libnvpl-lapack-dev 0.2.3
        - libnvpl-rand-dev 0.5.0
        - libnvpl-scalapack-dev 0.2.0
        - libnvpl-sparse-dev 0.3.0
        - libnvpl-tensor-dev 0.2.0

  - name: libnvpl-dev
    requirements:
      run:
        - {{ pin_subpackage('_nvpl_dev_mutex', exact=True) }}
        - libnvpl-blas-dev
        - libnvpl-common-dev
        - libnvpl-fft-dev
        - libnvpl-lapack-dev
        - libnvpl-rand-dev
        - libnvpl-scalapack-dev
        - libnvpl-sparse-dev
        - libnvpl-tensor-dev


about:
  home: https://developer.nvidia.com/nvpl
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/nvpl/license.html
  summary: >-
    The NVIDIA Performance Libraries (NVPL). For convenience only! Not to be
    used in host requirements for conda recipes!

extra:
  feedstock-name: libnvpl
  recipe-maintainers:
    - conda-forge/cuda
