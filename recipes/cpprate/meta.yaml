# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "cpprate" %}
{% set version = "0.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/tmaklin/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 9734f5e9da27404ad12e5d426d0547d0b35e91b86b37f9f34367570fb5660af4

build:
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}
    - cmake >= 3.1
  host:
    - llvm-openmp        # [osx]
    - libgomp            # [linux64]
    - openblas
    - eigen
  run:
    - libblas * *openblas
    - libgfortran-ng        # [linux64]
    - gfortran_impl_osx-64  # [osx]

test:
  commands:
    - cpprate

about:
  home: https://github.com/tmaklin/cpprate
  summary: 'Variable Selection in Black Box Methods with RelATive cEntrality (RATE) Measures'
  description: |
    cpprate is a reimplementation of https://github.com/lorinanthony/rate in C++.
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE

extra:
  recipe-maintainers:
    - johnlees
