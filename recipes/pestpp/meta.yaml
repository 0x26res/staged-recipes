{% set name = "pestpp" %}
{% set version = "5.2.6" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/usgs/pestpp/archive/{{ version }}.tar.gz
  sha256: f1642df05fb7ee3e3a7601dfdcb68b74d0f3bb6eb4657a0b3e2b788e29dc63ea

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  # script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
  run:
    - python

test:
  commands:
    - mf6 --help

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - simplejson
    - simplejson.tests
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/usgs/pestpp
  summary: 'A Software Suite for Parameter Estimation, Uncertainty Analysis, Management Optimization and Sensitivity Analysis'
  description: |
    PEST++ is a software suite aimed at supporting complex numerical
    models in the decision-support context. Much focus has been devoted to
    supporting environmental models (groundwater, surface water, etc) but
    these tools are readily applicable to any computer model.
  license: CC0-1.0
  license_family: CC
  license_file: LICENSE.md

extra:
  recipe-maintainers:
    - scharlton2
