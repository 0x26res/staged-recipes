--- cmake/target_jni.cmake.orig  2024-07-05 14:57:30.395099755 -0500
+++ cmake/target_jni.cmake       2024-07-05 14:58:11.635870965 -0500
@@ -10,2 +10,28 @@
 add_library(${LIB_NAME_JNI} SHARED ${JNI_SOURCES})
+set_target_properties(${LIB_NAME_JNI} PROPERTIES VERSION ${PROJECT_VERSION} SOVERSION ${PROJECT_VERSION_MAJOR})
+       if (WIN32)
+         set(BASE_OUTPUT_PATH "${CMAKE_CURRENT_BINARY_DIR}/${LIB_NAME_JNI}")
+         add_custom_command(
+           OUTPUT "${BASE_OUTPUT_PATH}.3.dll"
+                  "${BASE_OUTPUT_PATH}.3.0.0.dll"
+           COMMAND ${CMAKE_COMMAND} -E copy_if_different
+                   "${BASE_OUTPUT_PATH}.dll"
+                   "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.dll"
+           COMMAND ${CMAKE_COMMAND} -E copy_if_different
+                   "${BASE_OUTPUT_PATH}.dll"
+                   "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.dll"
+           DEPENDS ${LIB_NAME_JNI}
+           COMMENT "Copying ${LIB_NAME_JNI}.dll to versioned filenames"
+         )
+         add_custom_target(CopyVersionedJNIDLL ALL
+           DEPENDS "${BASE_OUTPUT_PATH}.dll"
+                   "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.dll"
+                   "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.dll"
+         )
+         install(FILES "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.dll"
+                       "${BASE_OUTPUT_PATH}.${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.dll"
+                 DESTINATION bin
+                 COMPONENT Runtime
+         )
+       endif ()

