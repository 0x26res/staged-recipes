{% set name = "nsight-compute" %}
{% set version = "2022.4.0.15" %}
{% set version_split = version.split(".")[0]+"."+version.split(".")[1]+"."+version.split(".")[2] %}
{% set cuda_version = "12.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/nsight_compute/{{ platform }}/nsight_compute-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: f084e05eb4d2ba32aceb25e1dcfe03f2a50127630973722b65219cf9e986a139  # [linux64]
  sha256: 20e58ce79681bc8fd39394cfb8f8316c177fe4175af3ae95c025996f45904732  # [ppc64le]
  sha256: 7d0b3d4d01ce36657fa739496c7b0a9c627f5fa42021c1696ddd15e119bb05a4  # [aarch64]
  sha256: 958da9986841c49cb5a2885d1e14e4c673ba94e4b404ef9389d083b7a0095d84  # [win]

build:
  number: 0
  skip: true  # [osx]
  missing_dso_whitelist:
  - '$RPATH/libpapi.so.5'
  - '$RPATH/libpfm.so.4'
  - '$RPATH/libGLX.so.0'
  - '$RPATH/libOpenGL.so.0'
  - '$RPATH/libprotobuf-shared.so'
  - '$RPATH/libnvlog.so'
  - '$RPATH/libCommonProtoServices.so'
  - '$RPATH/libXfixes.so.3'
  - '$RPATH/libTimelineCommon.so'
  - '$RPATH/ld64.so.2'
  - '$RPATH/libssh.so'
  - '$RPATH/libcrypto.so.1.1'
  - '$RPATH/libAgentAPI.so'
  - '$RPATH/libAnalysisData.so'
  - '$RPATH/libAnalysisProto.so'
  - '$RPATH/libAnalysis.so'
  - '$RPATH/libAppLibInterfaces.so'
  - '$RPATH/libAppLib.so'
  - '$RPATH/libAssert.so'
  - '$RPATH/libcom_err.so.2'
  - '$RPATH/libCommonNsysServer.so'
  - '$RPATH/libCommonProtoStreamSections.so'
  - '$RPATH/libCore.so'
  - '$RPATH/libCudaDrvApiWrapper.so'
  - '$RPATH/libcuda.so.1'
  - '$RPATH/libDevicePropertyProto.so'
  - '$RPATH/libDeviceProperty.so'
  - '$RPATH/libexporter.so'
  - '$RPATH/libGenericHierarchy.so'
  - '$RPATH/libGpuInfo.so'
  - '$RPATH/libHostCommon.so'
  - '$RPATH/libibmad.so.5'
  - '$RPATH/libInterceptorInjectionTarget.so'
  - '$RPATH/libInterfaceData.so'
  - '$RPATH/libInterfaceSharedBase.so'
  - '$RPATH/libInterfaceSharedCore.so'
  - '$RPATH/libInterfaceSharedLoggers.so'
  - '$RPATH/libInterfaceShared.so'
  - '$RPATH/libLinuxPerf.so'
  - '$RPATH/libNsysServerProto.so'
  - '$RPATH/libNvtxExtData.so'
  - '$RPATH/libProcessLauncher.so'
  - '$RPATH/libStreamSections.so'
  - '$RPATH/libSymbolAnalyzerLight.so'
  - '$RPATH/libSymbolDemangler.so'
  - '$RPATH/libTimelineAssert.so'
  - '$RPATH/libTimelineUIUtils.so'
  - '$RPATH/libTimelineWidget.so'
  - '$RPATH/libucm.so.0'
  - '$RPATH/libucp.so.0'
  - '$RPATH/libucs.so.0'
  - '$RPATH/libuct.so.0'
  - '$RPATH/libicuuc.so.71'
  - '$RPATH/libicudata.so.71'
  - '$RPATH/libcurl.so.4'
#not sure
  - '$RPATH/libEGL.so.1'
  - '$RPATH/libGL.so.1'
  - '$RPATH/libjpeg.so.62'
  - '$RPATH/libProtobufCommClient.so'
  - '$RPATH/libProtobufCommProto.so'
  - '$RPATH/libProtobufComm.so'
  - '$RPATH/libtiff.so.5'
  - '$RPATH/libSshClient.so' #not libssh
#cdt-builds?
  - '$RPATH/libibumad.so.3'
  - '$RPATH/libibverbs.so.1'
  - '$RPATH/libxshmfence.so.1'
#qt-feedstock only has libQt5
  - '$RPATH/libQt6WaylandClient.so.6'
  - '$RPATH/libQt6Core.so.6'
  - '$RPATH/libQt6Gui.so.6'
  - '$RPATH/libQt6Widgets.so.6'
  - '$RPATH/libNvQtGui.so'
  - '$RPATH/libQt6Charts.so.6'
  - '$RPATH/libQt6Concurrent.so.6'
  - '$RPATH/libQt6DBus.so.6'
  - '$RPATH/libQt6Network.so.6'
  - '$RPATH/libQt6OpenGL.so.6'
  - '$RPATH/libQt6OpenGLWidgets.so.6'
  - '$RPATH/libQt6Positioning.so.6'
  - '$RPATH/libQt6PrintSupport.so.6'
  - '$RPATH/libQt6QmlModels.so.6'
  - '$RPATH/libQt6Qml.so.6'
  - '$RPATH/libQt6Quick.so.6'
  - '$RPATH/libQt6StateMachine.so.6'
  - '$RPATH/libQt6Svg.so.6'
  - '$RPATH/libQt6UiTools.so.6'
  - '$RPATH/libQt6WaylandEglClientHwIntegration.so.6'
  - '$RPATH/libQt6WebChannel.so.6'
  - '$RPATH/libQt6WebEngineCore.so.6'
  - '$RPATH/libQt6WebEngineWidgets.so.6'
  - '$RPATH/libQt6WlShellIntegration.so.6'
  - '$RPATH/libQt6XcbQpa.so.6'
  - '$RPATH/libQt6Xml.so.6'
  - '$RPATH/libQtPropertyBrowser.so'

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - sysroot_{{ target_platform }} 2.17  # [linux]
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
  host:
    - cuda-version {{ cuda_version }}
    - boost-cpp
    #- icu #not helping?
    - dbus
    - wayland  # [linux]
    - libxkbcommon
    - libexpat
    - freetype
    - fontconfig
    - alsa-lib
    - libglib
    - libxcb
    - libzlib
    - nspr
    - nss
    - xorg-libxrender
    - xcb-util-image
    - xcb-util-renderutil
    - xcb-util-keysyms
    - xcb-util-wm
    - xorg-libx11
    - xorg-libsm
    - xorg-libice
    - xorg-libxext
    - xorg-libxrender
    - xcb-util-wm
    - xcb-util-keysyms
    - krb5
    - libxkbfile
    - xorg-libxrandr
    - xorg-libxtst
    - xorg-libxcomposite
    - xorg-libxdamage
    - xorg-libxfixes
#requires krb5
    #- qt-main
    #- libcurl
  run:
    - {{ pin_compatible("cuda-version", max_pin="x.x") }}
    - {{ pin_compatible("boost-cpp", max_pin="x.x") }}
    - {{ pin_compatible("libexpat", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxrender", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxcomposite", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxdamage", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxfixes", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxrandr", max_pin="x.x") }}
    - {{ pin_compatible("xorg-libxtst", max_pin="x.x") }}
    - {{ pin_compatible("libxkbfile", max_pin="x.x") }}
  run_constrained:
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  commands:
    - test -f $PREFIX/bin/ncu                      # [linux]
    - if not exist %LIBRARY_PREFIX%\nsight-compute exit 1  # [win]
    - if exist %LIBRARY_PREFIX%\nsight-compute\{{ version_split }}\lib exit 1  # [win]
    - if not exist %PREFIX%\Scripts\ncu.bat exit 1  # [win]
    - ncu --version

about:
  home: https://developer.nvidia.com/nsight-compute
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: NVIDIA Nsight Compute is an interactive kernel profiler for CUDA applications
  description: |
    NVIDIA Nsight Compute is an interactive kernel profiler for CUDA
    applications. It provides detailed performance metrics and API
    debugging via a user interface and command line tool.
  doc_url: https://docs.nvidia.com/nsight-compute/NsightCompute/index.html

extra:
  recipe-maintainers:
    - adibbley
